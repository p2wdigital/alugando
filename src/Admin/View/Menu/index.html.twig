{% extends 'Admin:layout.html.twig' %}
{% use 'Admin:widgets.html.twig' %}
{% block content %}
<div class="row">
	<div class="col-xs-12">
		<h2>Menus</h2>
	</div>
	<div class="col-xs-3 ">
		<div class="group-panel">
			{% include 'Admin:Menu:_pages.html.twig' %}
			{% include 'Admin:Menu:_category.html.twig' %}
			{% include 'Admin:Menu:_links.html.twig' %}
		</div><!-- panel group-->
	</div><!-- col lateral-->
	<div class="col-xs-9">
		<div class="panel panel-default">
			<div class="panel-heading">
				<div class="create-menu">
					{# Se existe um menu, update #}
					{% if menu is not empty %}
						<label for="">Nome do Menu: </label>
						<input type="text" class="form input-sm" id="nome" placeholder="Digite o Nome do Menu" value="{{menu.nome}}">
						<div class="pull-right">
							<button class="btn btn-warning btn-sm updateMenu">Salvar Menu</button>
						</div>
					{% else %}
   						<label for="">Nome do Menu: </label>
						<input type="text" class="form input-sm" id="nome" placeholder="Digite o Nome do Menu">
						<div class="pull-right">
							<button class="btn btn-warning btn-sm addMenu">Criar Menu</button>
						</div>
					{% endif %}
				</div>
			</div><!--/heading-->
			<div class="panel-body">
				<h3>Estrutura do Menu</h3>
				{# If existe menu update #}
				{% if menu is not empty %}
					<p class="msg">Adicione itens ao menu, utilizando o painel à esquerda!</p>
				{% else %}
					<p class="msg">Dê um nome ao seu menu, depois clique em Criar Menu</p>				    
				{% endif %}
				<div class="">
					<ul class="menu-sort">
						<input type="hidden" name="menu_id" {% if menu is not empty %}value="{{menu.Id}}"{% endif %}>
					</ul>
				</div>
			</div>
		</div>
		
	</div><!--/col menu-->

</div><!--/row-->
<script>
jQuery(document).ready(function($) {


	$(".addMenu").click(function(event) {
		$.ajax({
			url: '{{path("menu_create")}}',
			type: 'POST',
			dataType: 'json',
			data: {nome: $("#nome").val()},
		}).done(function(ret) {
			$("input[name=menu_id]").val(ret.Id);
			$(".msg").html("Adicione itens ao menu, utilizando o painel à esquerda!");
			$(".group-panel").removeClass('disabled');
			$(".addMenu").addClass('updateMenu').html("Salvar Menu").removeClass('addMenu');
		}).fail(function(ret) {
			alert("Erro na criação do Menu");
		});
	});

	$(".addPage").click(function(event) {
		var data = $(this).closest('.panel-body').find('input').serialize();
		if (data.length == 0) {
			alert("Selecione uma página para incluir no menu");
			return false;
		};
		data = data +"&type=page&" + $("input[name=menu_id]").serialize();
		console.debug(data.length);
		$.ajax({
			url: '{{path("menu_add_item")}}',
			type: 'POST',
			data: data,
		}).done(function(ret) {
			alert(ret);
			console.log(ret);
		}).fail(function() {
			console.log("error");
		});
		
	});


	var page = 
	('<li>\
		<div class="panel panel-default"> \
			<div class="panel-heading"> \
				<div class="title"></div> \
				<div class="type"></div> \
				<i class="fa fa-sort-down"></i> \
			</div> \
			<div class="panel-body" style="display:none"> \
				<div class="form-group row"> \
					<div class="col-xs-6">\
						<label for="">Rotulo</label> \
						<input type="text" name="label" class="form-control input-sm" />\
					</div>\
					<div class="col-xs-6">\
						<label for="">Tag Title</label>\
						<input type="text" name="title" class="form-control input-sm" />\
						<input type="hidden" name="id" />\
						<input type="hidden" name="type" value="page" />\
						<input type="hidden" name="parent" value="" />\
					</div>\
				</div> \
				<hr>\
				<div class="row">\
					<div class="col-xs-12">\
						<p>Original: <span class="original"></span></p>\
						<a href="#" class="text-danger remove">Apagar</a>\
					</div>\
				</div>\
			</div> \
		</div> \
	</li>');


	
	$(".group-panel .panel").each(function(index, el) {
		if (index != 0) {
			$(el).find(".panel-body").hide();
			$(el).find('.panel-heading').append('<i class="fa fa-sort-down"></i>');

		}else{
			$(el).find('.panel-heading').append('<i class="fa fa-sort-up"></i>');
		}
	});

	$(".group-panel .panel-heading").click(function(event) {
		if ($(this).parent().find('.panel-body').is(":hidden")) {
			$(".group-panel .panel .panel-heading i").removeClass('fa-sort-up').addClass('fa-sort-down');
			$(this).find('i').addClass('fa-sort-up');
			$(".group-panel .panel .panel-body").slideUp(150);
			$(this).parent().find('.panel-body').slideDown(150);
		};
	});

	$(".addPages").click(function(event) {
		$(".paginas input").each(function(index, el) {
			if ($(el).is(":checked")) {
				var nome = $(el).parent().find('span').html();
				var clone = $(page).clone();
				$(clone).find('.panel-heading .title, .original').html(nome);
				$(clone).find("input[name=label]").val(nome);
				$(clone).find("input[name=id]").val($(this).val());

				$(".menu-sort").append(clone);
				
				$(el).removeAttr('checked');
				    
			};

		});
	});

	$('.menu-sort').nestedSortable({
        handle: 'div',
        items: 'li',
        toleranceElement: '> div',
        placeholder: "ui-state-highlight",
        forcePlaceholderSize: true,    
    	listType: 'ul',
    	//isAllowed: myfunc
    	update:myfunc
     });

	$(".menu-sort").on('click', '.panel .panel-heading', function(event) {
		event.preventDefault();
		$(this).parent().find(".panel-body").slideToggle(120);
	});

	$(".menu-sort").on('click', '.remove', function(event) {
		event.preventDefault();
		$(this).closest("li").detach();
	});

	$(".teste").click(function(event) {

		var obj = jsonEnconde($(".menu-sort > li"), true);
		$(this).after(obj);
		console.debug($('.menu-sort').nestedSortable('serialize'));
		//return false;
		$.ajax({
			url: '{{path("menu_teste")}}',
			type: 'POST',
			data: {data: obj},
		})
		.done(function(ret) {
			alert(ret);

		})
		.fail(function() {
			console.log("error");
		})
		.always(function() {
			console.log("complete");
		});
		
		
	});




});
function myfunc(event,ui){
	console.log(ui.sender);

	if ($(ui.item).parents('li').html() == undefined) {
		console.log("Indefinido");
	}else{
		console.log("Definido ");
	};

}

var i =0;
function jsonEnconde(obj, isStringify){
		jsonObj = new Array();
		$(obj).each(function(index, el) {
			
			//alert($(el).html());
			
			
			var panel = $(el).find('.panel-body');
			var item = {};
			item['id'] 		= $(panel).find('input[name=id]').val();
			item['type'] 	= 'page';
			item['label'] 	= $(panel).find('input[name=label]').val();
			item['title'] 	= $(panel).find('input[name=title]').val();
			if ($(el).find("ul>li").html() == undefined) {
				item['parent'] = 0;
				//console.log($(el).find("ul>li").html());
			}else{
				var aux = jsonEnconde($(el).find('ul>li'), false);
				//console.debug(aux);
				item['parent'] = aux;
			};
			jsonObj.push(item);
			//console.debug($(el).closest('li').find('.panel-body').find('input[name=id]').val());
		});
		if (isStringify) {
			return JSON.stringify(jsonObj);
		}else{
			return jsonObj;
		}
}
function jsonEnconde2(obj){
		jsonObj = new Array();
		$(obj).each(function(index, el) {
			
			//alert($(el).html());
			
			
			var panel = $(el).find('.panel-body');
			var item = {};
			item['id'] 		= $(panel).find('input[name=id]').val();
			item['type'] 	= 'page';
			item['label'] 	= $(panel).find('input[name=label]').val();
			item['title'] 	= $(panel).find('input[name=title]').val();
			if ($(el).find("ul>li").html() == undefined) {
				item['parent'] = 0;
				//console.log($(el).find("ul>li").html());
			}else{
				//var aux = jsonEnconde($(el).find('ul>li'));
				//console.debug(aux);
				//item['parent'] = aux;
			};
			jsonObj.push(item);
			//console.debug($(el).closest('li').find('.panel-body').find('input[name=id]').val());
		});
		return jsonObj;
}

</script>

{% endblock %}

{% block head %}
    {{parent()}}
    {{script(assert("/js/jquery-ui/jquery-ui.js"))}}
    {{script(assert("/js/jquery.nestedSortable.js"))}}
{% endblock %}